From b3573b3f9c5921e9d3a23d2ca89969c1c8cbb008 Mon Sep 17 00:00:00 2001
From: Bibo Mao <maobibo@loongson.cn>
Date: Wed, 13 Mar 2024 17:46:19 +0800
Subject: [PATCH 29/76] hw/intc/loongarch_extioi: Add virt extension support v2

fix 954c513fa3846f34ecd81e4eb25457ed49362b39
"Add virt extension support" in v2 version.

Signed-off-by: Bibo Mao <maobibo@loongson.cn>
Signed-off-by: Xianglai Li <lixianglai@loongson.cn>
---
 hw/intc/loongarch_extioi.c         | 24 ++++-------
 hw/loongarch/virt.c                | 64 +++++++++++++++++-------------
 include/hw/intc/loongarch_extioi.h |  3 +-
 include/hw/loongarch/virt.h        |  2 +-
 4 files changed, 47 insertions(+), 46 deletions(-)

diff --git a/hw/intc/loongarch_extioi.c b/hw/intc/loongarch_extioi.c
index a892edca..fa23e247 100644
--- a/hw/intc/loongarch_extioi.c
+++ b/hw/intc/loongarch_extioi.c
@@ -55,11 +55,6 @@ static void extioi_update_irq(LoongArchExtIOI *s, int irq, int level)
 static void extioi_setirq(void *opaque, int irq, int level)
 {
     LoongArchExtIOI *s = LOONGARCH_EXTIOI(opaque);
-
-    if (s->status & BIT(EXTIOI_ENABLE)) {
-        return;
-    }
-
     trace_loongarch_extioi_setirq(irq, level);
     if (level) {
         /*
@@ -148,18 +143,17 @@ static inline void extioi_update_sw_coremap(LoongArchExtIOI *s, int irq,
 
     for (i = 0; i < 4; i++) {
         cpu = val & 0xff;
-        val = val >> 8;
-
-        if (!(s->status & BIT(EXTIOI_ENABLE_CPU_ENCODE))) {
+	if (!(s->status & BIT(EXTIOI_ENABLE_CPU_ENCODE))) {
             cpu = ctz32(cpu);
             cpu = (cpu >= 4) ? 0 : cpu;
         }
+        val = val >> 8;
 
         if (s->sw_coremap[irq + i] == cpu) {
             continue;
         }
 
-        if (notify && test_bit(irq, (unsigned long *)s->isr)) {
+        if (notify && test_bit(irq + i, (unsigned long *)s->isr)) {
             /*
              * lower irq at old cpu and raise irq at new cpu
              */
@@ -185,12 +179,8 @@ static inline void extioi_update_sw_ipmap(LoongArchExtIOI *s, int index,
     val = cpu_to_le64(val);
     for (i = 0; i < 4; i++) {
         ipnum = val & 0xff;
-        if (s->status & EXTIOI_ENABLE_INT_ENCODE) {
-            ipnum = (ipnum >= 8) ? 0 : ipnum;
-        } else {
-            ipnum = ctz32(ipnum);
-            ipnum = (ipnum >= 4) ? 0 : ipnum;
-        }
+        ipnum = ctz32(ipnum);
+        ipnum = (ipnum >= 4) ? 0 : ipnum;
         s->sw_ipmap[index * 4 + i] = ipnum;
         val = val >> 8;
     }
@@ -386,7 +376,9 @@ static void loongarch_extioi_reset(DeviceState *d)
     LoongArchExtIOI *s = LOONGARCH_EXTIOI(d);
 
     /* use legacy interrupt routing method by default */
-    s->status = 0;
+    if (s->features & BIT(EXTIOI_HAS_VIRT_EXTENSION)) {
+        s->status = 0;
+    }
 }
 
 static int vmstate_extioi_post_load(void *opaque, int version_id)
diff --git a/hw/loongarch/virt.c b/hw/loongarch/virt.c
index 00359643..01e59f3a 100644
--- a/hw/loongarch/virt.c
+++ b/hw/loongarch/virt.c
@@ -15,6 +15,7 @@
 #include "sysemu/runstate.h"
 #include "sysemu/reset.h"
 #include "sysemu/rtc.h"
+#include "sysemu/tcg.h"
 #include "sysemu/kvm.h"
 #include "hw/loongarch/virt.h"
 #include "exec/address-spaces.h"
@@ -55,6 +56,31 @@ struct loaderparams {
     const char *initrd_filename;
 };
 
+static bool virt_is_veiointc_enabled(LoongArchMachineState *lams)
+{
+    if (lams->veiointc == ON_OFF_AUTO_OFF) {
+        return false;
+    }
+    return true;
+}
+
+static void virt_get_veiointc(Object *obj, Visitor *v, const char *name,
+                               void *opaque, Error **errp)
+{
+    LoongArchMachineState *lams = LOONGARCH_MACHINE(obj);
+    OnOffAuto veiointc = lams->veiointc;
+
+    visit_type_OnOffAuto(v, name, &veiointc, errp);
+}
+
+static void virt_set_veiointc(Object *obj, Visitor *v, const char *name,
+                               void *opaque, Error **errp)
+{
+    LoongArchMachineState *lams = LOONGARCH_MACHINE(obj);
+
+    visit_type_OnOffAuto(v, name, &lams->veiointc, errp);
+}
+
 static PFlashCFI01 *virt_flash_create1(LoongArchMachineState *lams,
                                        const char *name,
                                        const char *alias_prop_name)
@@ -619,14 +645,14 @@ static void loongarch_irq_init(LoongArchMachineState *lams)
     /* Create EXTIOI device */
     extioi = qdev_new(TYPE_LOONGARCH_EXTIOI);
     qdev_prop_set_uint32(extioi, "num-cpu", ms->smp.cpus);
-    if (lams->v_eiointc) {
+    if (virt_is_veiointc_enabled(lams)) {
         qdev_prop_set_bit(extioi, "has-virtualization-extension", true);
     }
     sysbus_realize_and_unref(SYS_BUS_DEVICE(extioi), &error_fatal);
 
     memory_region_add_subregion(&lams->system_iocsr, APIC_BASE,
                    sysbus_mmio_get_region(SYS_BUS_DEVICE(extioi), 0));
-    if (lams->v_eiointc) {
+    if (virt_is_veiointc_enabled(lams)) {
         memory_region_add_subregion(&lams->system_iocsr, EXTIOI_VIRT_BASE,
                    sysbus_mmio_get_region(SYS_BUS_DEVICE(extioi), 1));
     }
@@ -798,7 +824,7 @@ static MemTxResult loongarch_qemu_write(void *opaque, hwaddr addr, uint64_t val,
 
     switch (addr) {
     case MISC_FUNC_REG:
-        if (!lams->v_eiointc) {
+        if (!virt_is_veiointc_enabled(lams)) {
             return MEMTX_OK;
         }
 
@@ -846,7 +872,7 @@ static MemTxResult loongarch_qemu_read(void *opaque, hwaddr addr,
         ret = 0x303030354133ULL;     /* "3A5000" */
         break;
     case MISC_FUNC_REG:
-        if (!lams->v_eiointc) {
+        if (!virt_is_veiointc_enabled(lams)) {
             ret |= BIT_ULL(IOCSRM_EXTIOI_EN);
             break;
         }
@@ -1075,10 +1101,8 @@ static void loongarch_machine_initfn(Object *obj)
 {
     LoongArchMachineState *lams = LOONGARCH_MACHINE(obj);
 
-    if (kvm_enabled()) {
-        lams->v_eiointc = true;
-    } else {
-        lams->v_eiointc = false;
+    if (tcg_enabled()) {
+        lams->veiointc = ON_OFF_AUTO_OFF;
     }
     lams->acpi = ON_OFF_AUTO_AUTO;
     lams->oem_id = g_strndup(ACPI_BUILD_APPNAME6, 6);
@@ -1233,20 +1257,6 @@ static int64_t virt_get_default_cpu_node_id(const MachineState *ms, int idx)
     return nidx;
 }
 
-static bool virt_get_v_eiointc(Object *obj, Error **errp)
-{
-    LoongArchMachineState *lams = LOONGARCH_MACHINE(obj);
-
-    return lams->v_eiointc;
-}
-
-static void virt_set_v_eiointc(Object *obj, bool value, Error **errp)
-{
-    LoongArchMachineState *lams = LOONGARCH_MACHINE(obj);
-
-    lams->v_eiointc = value;
-}
-
 static void loongarch_class_init(ObjectClass *oc, void *data)
 {
     MachineClass *mc = MACHINE_CLASS(oc);
@@ -1281,16 +1291,14 @@ static void loongarch_class_init(ObjectClass *oc, void *data)
         NULL, NULL);
     object_class_property_set_description(oc, "acpi",
         "Enable ACPI");
+    object_class_property_add(oc, "v-eiointc", "OnOffAuto",
+        virt_get_veiointc, virt_set_veiointc, NULL, NULL);
+    object_class_property_set_description(oc, "v-eiointc",
+                            "Enable Virt Extend I/O Interrupt Controller");
     machine_class_allow_dynamic_sysbus_dev(mc, TYPE_RAMFB_DEVICE);
 #ifdef CONFIG_TPM
     machine_class_allow_dynamic_sysbus_dev(mc, TYPE_TPM_TIS_SYSBUS);
 #endif
-
-    object_class_property_add_bool(oc, "v-eiointc", virt_get_v_eiointc,
-                               virt_set_v_eiointc);
-    object_class_property_set_description(oc, "v-eiointc",
-                            "Set on/off to enable/disable The virt"
-                            "LoongArch Extend I/O Interrupt Controller. ");
 }
 
 static const TypeInfo loongarch_machine_types[] = {
diff --git a/include/hw/intc/loongarch_extioi.h b/include/hw/intc/loongarch_extioi.h
index 3742fce3..1cf5bf99 100644
--- a/include/hw/intc/loongarch_extioi.h
+++ b/include/hw/intc/loongarch_extioi.h
@@ -36,7 +36,7 @@
 #define EXTIOI_ISR_START             (0x700 - APIC_OFFSET)
 #define EXTIOI_ISR_END               (0x720 - APIC_OFFSET)
 #define EXTIOI_COREISR_START         (0x800 - APIC_OFFSET)
-#define EXTIOI_COREISR_END           (0x820 - APIC_OFFSET)
+#define EXTIOI_COREISR_END           (0xB20 - APIC_OFFSET)
 #define EXTIOI_COREMAP_START         (0xC00 - APIC_OFFSET)
 #define EXTIOI_COREMAP_END           (0xD00 - APIC_OFFSET)
 
@@ -48,6 +48,7 @@
 #define  EXTIOI_HAS_INT_ENCODE         (2)
 #define  EXTIOI_HAS_CPU_ENCODE         (3)
 #define  EXTIOI_VIRT_HAS_FEATURES      (BIT(EXTIOI_HAS_VIRT_EXTENSION) \
+                                        | BIT(EXTIOI_HAS_ENABLE_OPTION)\
                                         | BIT(EXTIOI_HAS_INT_ENCODE)   \
                                         | BIT(EXTIOI_HAS_CPU_ENCODE))
 #define EXTIOI_VIRT_CONFIG           (0x4)
diff --git a/include/hw/loongarch/virt.h b/include/hw/loongarch/virt.h
index d34fa2d0..8012df9c 100644
--- a/include/hw/loongarch/virt.h
+++ b/include/hw/loongarch/virt.h
@@ -40,12 +40,12 @@ struct LoongArchMachineState {
     MemoryRegion highmem;
     MemoryRegion bios;
     bool         bios_loaded;
-    bool         v_eiointc;
     /* State for other subsystems/APIs: */
     FWCfgState  *fw_cfg;
     Notifier     machine_done;
     Notifier     powerdown_notifier;
     OnOffAuto    acpi;
+    OnOffAuto    veiointc;
     char         *oem_id;
     char         *oem_table_id;
     DeviceState  *acpi_ged;
-- 
2.45.2

